<?xml version="1.0"?>
<testsuites>
  <testsuite name="Firefox 33.0.0 (Mac OS X 10.10)" package="" timestamp="2015-01-15T17:00:50" id="0" hostname="Dans-MacBook-Pro.local" tests="805" errors="0" failures="0" time="0.13">
    <properties>
      <property name="browser.fullName" value="Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:33.0) Gecko/20100101 Firefox/33.0"/>
    </properties>
    <testcase name="has the correct class name." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="contains some important methods." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="saves unexpected attributes" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="has not been run" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="reports the correct state name" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets the caller to false" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; invalid event event reject">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;preparing&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;reject&apos; invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;reject&apos; invalid event event reject">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;reject&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;reject&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;reject&apos; invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;reject&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;reject&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;reject&apos; invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;reject&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;reject&apos; invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing not ansering own call">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing not ansering own call">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing not ansering own call">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing not ansering own call">
      <skipped/>
    </testcase>
    <testcase name="should set the terminate reason" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing not ansering own call">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;approvingDeviceAccess&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;approving-device-access:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;approvingContent&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;approving-content:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;connecting&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;connecting:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;connected&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveRemoteMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;connected:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveRemoteMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveRemoteMedia&apos; invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveRemoteMedia&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveRemoteMedia&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveRemoteMedia&apos; invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveRemoteMedia&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveRemoteMedia&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveRemoteMedia&apos; invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveRemoteMedia&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="does not change state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;connecting&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;connecting:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;connected&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; event &apos;receiveRemoteMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;connected:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; event &apos;receiveRemoteMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; event &apos;receiveRemoteMedia&apos; invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; event &apos;receiveRemoteMedia&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; event &apos;receiveRemoteMedia&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; event &apos;receiveRemoteMedia&apos; invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; event &apos;receiveRemoteMedia&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; event &apos;receiveRemoteMedia&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; event &apos;receiveRemoteMedia&apos; invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos; event &apos;receiveRemoteMedia&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is not flowing event &apos;answer&apos; event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;connected&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;modifying&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;modifying:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;preparing&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;modifying:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;connected&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;modifying:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify sender invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;preparing&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;connected&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; when a call listener is not attached">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; when a call listener is not attached">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the callee when starting from &apos;idle&apos; when a call listener is not attached">
      <skipped/>
    </testcase>
    <testcase name="has the correct class name." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="contains some important methods." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="saves unexpected attributes" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="has not been run" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="reports the correct state name" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos;">
      <skipped/>
    </testcase>
    <testcase name="invalid event answer doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="invalid event receiveLocalMedia doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="invalid event approve doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="invalid event sentOffer doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="invalid event accept doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="invalid event receiveRemoteMedia doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="invalid event receiveAnswer doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="invalid event modify doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;preparing&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event reject">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;approvingContent&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;approving-content:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="sets the hasLocalMediaApproval flag" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;approve&apos; when we have not received local media yet">
      <skipped/>
    </testcase>
    <testcase name="stays in &apos;approvingContent&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;approve&apos; when we have not received local media yet">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;connecting&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;approving-content:exit&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;connecting:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;approve&apos; event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;approve&apos; event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;approving-content:exit&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;preparing:exit&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used and the dc is accepted before the offer is received">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t change state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used and the dc is accepted before the offer is received">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used and the dc is accepted before the offer is received event &apos;receiveOffer&apos;">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;connecting&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used and the dc is accepted before the offer is received event &apos;receiveOffer&apos;">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;connecting&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used and the ofter is received before answer">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;connecting:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used and the ofter is received before answer">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used and the ofter is received before answer">
      <skipped/>
    </testcase>
    <testcase name="sets the hasLocalMediaApproval flag" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used and the ofter is received before answer">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used and the ofter is received before answer event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;connected&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used and the ofter is received before answer event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;connecting:exit&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used and the ofter is received before answer event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;connected:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used and the ofter is received before answer event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;connected&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;modifying&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;modifying:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;preparing&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;modifying:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should set hasLocalMediaApproval to false" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should set hasLocalMedia to false" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should set caller to true" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;connected&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;modifying:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;preparing&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="should set the caller to false" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;connected&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is not attached">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is not attached">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the callee when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is not attached">
      <skipped/>
    </testcase>
    <testcase name="has the correct class name." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="contains some important methods." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="saves unexpected attributes" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="has not been run" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="reports the correct state name" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos;">
      <skipped/>
    </testcase>
    <testcase name="invalid event answer doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="invalid event receiveLocalMedia doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="invalid event approve doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="invalid event sentOffer doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="invalid event accept doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="invalid event receiveRemoteMedia doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="invalid event receiveAnswer doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="invalid event modify doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;preparing&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;reject&apos; invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;reject&apos; invalid event event reject">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;reject&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;reject&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;reject&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;reject&apos; invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;reject&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;reject&apos; invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;reject&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;reject&apos; invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;approvingDeviceAccess&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;approving-device-access:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;approvingContent&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;approving-content:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;offering&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;approving-content:exit&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;offering:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already not receiving an answer">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already not receiving an answer">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;offering:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already not receiving an answer">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already not receiving an answer">
      <skipped/>
    </testcase>
    <testcase name="should set the terminate reason" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already not receiving an answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="does not move to another state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;connecting&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;connecting:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; not receiving ICE connected">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; not receiving ICE connected">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connecting:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; not receiving ICE connected">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; not receiving ICE connected">
      <skipped/>
    </testcase>
    <testcase name="should set the terminate reason" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; not receiving ICE connected">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="moves to the &apos;connected&apos; state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; event &apos;receiveRemoteMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires the &apos;connected:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; event &apos;receiveRemoteMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; event &apos;receiveRemoteMedia&apos; invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; event &apos;receiveRemoteMedia&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; event &apos;receiveRemoteMedia&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; event &apos;receiveRemoteMedia&apos; invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; event &apos;receiveRemoteMedia&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; event &apos;receiveRemoteMedia&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; event &apos;receiveRemoteMedia&apos; invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have received local media already event &apos;receiveAnswer&apos; event &apos;receiveRemoteMedia&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="sets the hasLocalMediaApproval flag" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet">
      <skipped/>
    </testcase>
    <testcase name="stays in &apos;approvingContent&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;offering&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;approving-content:exit&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;offering:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;approve&apos; event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;approving-content:exit&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;preparing:exit&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;approve&apos; event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is not flowing event &apos;answer&apos; event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;connected&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;modifying&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;modifying:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;preparing&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;modifying:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should set hasLocalMediaApproval to false" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should set hasLocalMedia to false" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should set caller to true" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;connected&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;modifying:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;preparing&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="should set the caller to false" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;connected&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;preparing&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is not attached">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is not attached">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for calls as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a call listener is not attached">
      <skipped/>
    </testcase>
    <testcase name="has the correct class name." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="contains some important methods." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="saves unexpected attributes" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="has not been run" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller it&apos;s object structure">
      <skipped/>
    </testcase>
    <testcase name="reports the correct state name" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos;">
      <skipped/>
    </testcase>
    <testcase name="invalid event answer doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="invalid event receiveLocalMedia doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="invalid event approve doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="invalid event sentOffer doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="invalid event accept doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="invalid event receiveRemoteMedia doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="invalid event receiveAnswer doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="invalid event modify doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;preparing&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event reject">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;reject&apos; invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;approvingContent&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;approving-content:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="sets the hasLocalMediaApproval flag" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;approve&apos; when we have not received local media yet">
      <skipped/>
    </testcase>
    <testcase name="stays in &apos;approvingContent&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;approve&apos; when we have not received local media yet">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;offering&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;approving-content:exit&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;offering:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;approve&apos; when we have not received local media yet event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;approve&apos; event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;approve&apos; event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;approving-content:exit&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;preparing:exit&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is used event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;offering&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;offering:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="moves to &apos;connected&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;offering:exit&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="fires &apos;connected:entry&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is not flowing event &apos;answer&apos; when previewLocalMedia is not used event &apos;receiveLocalMedia&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;terminated&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;terminated:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;hangup&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;connected&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;modifying&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;modifying:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;preparing&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;modifying:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should set hasLocalMediaApproval to false" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should set hasLocalMedia to false" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="should set caller to true" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;accept&apos;">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;connected&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;modifying:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event answer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify initiator invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;preparing&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="should set the caller to false" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="sets all the right flags" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;connected&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;connected:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:exit&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver event &apos;reject&apos;">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event initiate">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveLocalMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event approve">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event sentOffer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveRemoteMedia">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event receiveAnswer">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event modify">
      <skipped/>
    </testcase>
    <testcase name="doesn&apos;t move to a new state" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="should report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is attached when media is flowing event &apos;reject&apos; event &apos;modify&apos; as modify receiver invalid event event accept">
      <skipped/>
    </testcase>
    <testcase name="leads to &apos;preparing&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is not attached">
      <skipped/>
    </testcase>
    <testcase name="should not report modifying" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is not attached">
      <skipped/>
    </testcase>
    <testcase name="should fire the &apos;preparing:entry&apos; event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_CallState for direct connections as the caller when starting from &apos;idle&apos; event &apos;initiate&apos; when a direct connection listener is not attached">
      <skipped/>
    </testcase>
    <testcase name="extends respoke.EventEmitter." time="0.002" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected it&apos;s object structure"/>
    <testcase name="extends respoke.Presentable." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected it&apos;s object structure"/>
    <testcase name="has the correct class name." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected it&apos;s object structure"/>
    <testcase name="contains some important methods." time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected it&apos;s object structure"/>
    <testcase name="saves unexpected developer-specified parameters." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected it&apos;s object structure"/>
    <testcase name="doesn&apos;t expose the signaling channel" time="0.004" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected it&apos;s object structure"/>
    <testcase name="tries to set presence and errors because of lack of connection" time="0.007" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected setPresence()"/>
    <testcase name="throws an error" time="0.002" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected connect() when called without developmentMode"/>
    <testcase name="throws an error" time="0.005" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected connect() when called without appId"/>
    <testcase name="throws an error" time="0.015" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected connect() when called without endpointId"/>
    <testcase name="doesn&apos;t change the client.isConnected() value" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected disconnect()"/>
    <testcase name="doesn&apos;t fire the disconnect event" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected disconnect()"/>
    <testcase name="rejects the disconnect promise" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected disconnect()"/>
    <testcase name="throws an error" time="0.005" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected setPresence()"/>
    <testcase name="throws an error" time="0.005" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected setOnline()"/>
    <testcase name="throws an error" time="0.005" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected setOffline()"/>
    <testcase name="throws an error" time="0.004" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected sendMessage()"/>
    <testcase name="throws an error" time="0.006" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected startCall()"/>
    <testcase name="throws an error" time="0.005" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected startPhoneCall()"/>
    <testcase name="throws an error" time="0.005" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected join()"/>
    <testcase name="returns undefined" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected getGroup()"/>
    <testcase name="returns an empty array" time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected getGroups()"/>
    <testcase name="returns undefined" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected getEndpoint()"/>
    <testcase name="returns an empty array" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected getEndpoints()"/>
    <testcase name="returns undefined" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when not connected getConnection()"/>
    <testcase name="calls SignalingChannel.close" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when connected disconnect"/>
    <testcase name="calls SignalingChannel.sendPresence" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when connected setPresence"/>
    <testcase name="calls SignalingChannel.sendPresence" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when connected setOnline"/>
    <testcase name="calls SignalingChannel.sendPresence" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when connected setOffline"/>
    <testcase name="calls SignalingChannel.sendMessage" time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when connected sendMessage"/>
    <testcase name="calls SignalingChannel.startPhoneCall" time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when connected startPhoneCall"/>
    <testcase name="calls SignalingChannel.startCall" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when connected startCall"/>
    <testcase name="calls SignalingChannel.startSIPCall" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).respoke_Client when connected startSIPCall"/>
    <testcase name="extends respoke.EventEmitter." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Connection it&apos;s object structure"/>
    <testcase name="extends respoke.Presentable." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Connection it&apos;s object structure"/>
    <testcase name="has the correct class name." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Connection it&apos;s object structure"/>
    <testcase name="contains some important methods." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Connection it&apos;s object structure"/>
    <testcase name="can set and get presence and fires the correct event." time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Connection it&apos;s object structure"/>
    <testcase name="saves unexpected developer-specified parameters." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Connection it&apos;s object structure"/>
    <testcase name="doesn&apos;t expose the signaling channel" time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Connection it&apos;s object structure"/>
    <testcase name="throws an error" time="0.005" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Connection when not connected sendMessage()"/>
    <testcase name="throws an error" time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Connection when not connected startAudioCall()"/>
    <testcase name="throws an error" time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Connection when not connected startVideoCall()"/>
    <testcase name="throws an error" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Connection when not connected startCall()"/>
    <testcase name="throws an error" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Connection when not connected startDirectConnection()"/>
    <testcase name="returns the endpoint associated with the connection" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Connection when not connected getEndpoint()"/>
    <testcase name="extends respoke.EventEmitter." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint it&apos;s object structure"/>
    <testcase name="extends respoke.Presentable." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint it&apos;s object structure"/>
    <testcase name="has the correct class name." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint it&apos;s object structure"/>
    <testcase name="contains some important methods." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint it&apos;s object structure"/>
    <testcase name="can set and get presence and fires the correct event." time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint it&apos;s object structure"/>
    <testcase name="saves unexpected developer-specified parameters." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint it&apos;s object structure"/>
    <testcase name="doesn&apos;t expose the signaling channel" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint it&apos;s object structure"/>
    <testcase name="throws an error" time="0.003" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected sendMessage()"/>
    <testcase name="throws an error" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected startAudioCall()"/>
    <testcase name="throws an error" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected startVideoCall()"/>
    <testcase name="throws an error" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected startCall()"/>
    <testcase name="throws an error" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected startDirectConnection()"/>
    <testcase name="endpoint.presence equals &apos;chat&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when only one connection when presence is set to &apos;chat&apos;"/>
    <testcase name="endpoint.presence equals &apos;available&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when only one connection when presence is set to &apos;available&apos;"/>
    <testcase name="endpoint.presence equals &apos;away&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when only one connection when presence is set to &apos;away&apos;"/>
    <testcase name="endpoint.presence equals &apos;dnd&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when only one connection when presence is set to &apos;dnd&apos;"/>
    <testcase name="endpoint.presence equals &apos;xa&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when only one connection when presence is set to &apos;xa&apos;"/>
    <testcase name="endpoint.presence equals &apos;unavailable&apos;" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when only one connection when presence is set to &apos;unavailable&apos;"/>
    <testcase name="endpoint.presence equals the one that appears first in the array" time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections when presence is set to &apos;chat&apos; and &apos;available&apos;"/>
    <testcase name="endpoint.presence equals the one that appears first in the array" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections when presence is set to &apos;chat&apos; and &apos;away&apos;"/>
    <testcase name="endpoint.presence equals the one that appears first in the array" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections when presence is set to &apos;chat&apos; and &apos;dnd&apos;"/>
    <testcase name="endpoint.presence equals the one that appears first in the array" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections when presence is set to &apos;chat&apos; and &apos;xa&apos;"/>
    <testcase name="endpoint.presence equals the one that appears first in the array" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections when presence is set to &apos;chat&apos; and &apos;unavailable&apos;"/>
    <testcase name="endpoint.presence equals the one that appears first in the array" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections when presence is set to &apos;available&apos; and &apos;away&apos;"/>
    <testcase name="endpoint.presence equals the one that appears first in the array" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections when presence is set to &apos;available&apos; and &apos;dnd&apos;"/>
    <testcase name="endpoint.presence equals the one that appears first in the array" time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections when presence is set to &apos;available&apos; and &apos;xa&apos;"/>
    <testcase name="endpoint.presence equals the one that appears first in the array" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections when presence is set to &apos;available&apos; and &apos;unavailable&apos;"/>
    <testcase name="endpoint.presence equals the one that appears first in the array" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections when presence is set to &apos;away&apos; and &apos;dnd&apos;"/>
    <testcase name="endpoint.presence equals the one that appears first in the array" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections when presence is set to &apos;away&apos; and &apos;xa&apos;"/>
    <testcase name="endpoint.presence equals the one that appears first in the array" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections when presence is set to &apos;away&apos; and &apos;unavailable&apos;"/>
    <testcase name="endpoint.presence equals the one that appears first in the array" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections when presence is set to &apos;dnd&apos; and &apos;xa&apos;"/>
    <testcase name="endpoint.presence equals the one that appears first in the array" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections when presence is set to &apos;dnd&apos; and &apos;unavailable&apos;"/>
    <testcase name="endpoint.presence equals the one that appears first in the array" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections when presence is set to &apos;xa&apos; and &apos;unavailable&apos;"/>
    <testcase name="endpoint.presence equals expected presence" time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections with custom resolve endpoint presence that returns valid presence"/>
    <testcase name="endpoint.presence equals expected presence" time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected resolvePresence() when there are two connections with custom resolve endpoint presence that returns custom presence"/>
    <testcase name="returns the connection" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected getConnection() when there is one connection and no connectionId is specified"/>
    <testcase name="returns the connection" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected getConnection() when there is one connection and the connectionId is specified"/>
    <testcase name="returns null" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Endpoint when not connected getConnection() when there is one connection and a wrong connectionId is specified"/>
    <testcase name="has the correct class name." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter"/>
    <testcase name="contains some important methods." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter"/>
    <testcase name="saves unexpected developer-specified parameters." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter"/>
    <testcase name="doesn&apos;t expose the signaling channel" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter"/>
    <testcase name="passes the right arguments" time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10)."/>
    <testcase name="passes the right arguments" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter when passed different types of arguments 1"/>
    <testcase name="passes the right arguments" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter when passed different types of arguments 2"/>
    <testcase name="passes the right arguments" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter when passed different types of arguments 3"/>
    <testcase name="passes the right arguments" time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter when passed different types of arguments 4"/>
    <testcase name="passes the right arguments" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter when passed different types of arguments 5"/>
    <testcase name="passes the right arguments" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter when passed different types of arguments 6"/>
    <testcase name="passes the right arguments" time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter when passed different types of arguments 7"/>
    <testcase name="passes the right arguments" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter when passed different types of arguments 8"/>
    <testcase name="passes the right arguments" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter when passed different types of arguments 9"/>
    <testcase name="passes the right arguments" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter when passed different types of arguments 10"/>
    <testcase name="passes the right arguments" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter when passed different types of arguments 11"/>
    <testcase name="should handle multiple events, multiple listeners, and call each once" time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter when firing events when not ignored"/>
    <testcase name="should fire in the order in which they were added" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter when firing events when not ignored multiple events"/>
    <testcase name="only one of the identical listeners is called" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter when firing events when not ignored identical listeners"/>
    <testcase name="should not call any listeners when ignore is used" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter when firing events when ignored"/>
    <testcase name="returns false" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter the &apos;hasListener&apos; method when listener is added via &apos;listen&apos; when isInternal is true"/>
    <testcase name="returns true" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter the &apos;hasListener&apos; method when listener is added via &apos;listen&apos; when isInternal is false"/>
    <testcase name="returns false" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter the &apos;hasListener&apos; method when listener is added via &apos;once&apos; when isInternal is true"/>
    <testcase name="returns false" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter the &apos;hasListener&apos; method when listener is added via &apos;once&apos; when isInternal is true after the event is called"/>
    <testcase name="returns true" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter the &apos;hasListener&apos; method when listener is added via &apos;once&apos; when isInternal is false"/>
    <testcase name="returns false" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter the &apos;hasListener&apos; method when listener is added via &apos;once&apos; when isInternal is false after the event is called"/>
    <testcase name="fires the method only once" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter the &apos;once&apos; method"/>
    <testcase name="removes the listener after it fires" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter the &apos;once&apos; method"/>
    <testcase name="calls all the methods exactly once" time="0.004" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_EventEmitter the &apos;once&apos; method called with different functions"/>
    <testcase name="extends respoke.EventEmitter." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Group it&apos;s object structure"/>
    <testcase name="has the correct class name." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Group it&apos;s object structure"/>
    <testcase name="contains some important methods." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Group it&apos;s object structure"/>
    <testcase name="saves unexpected developer-specified parameters." time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Group it&apos;s object structure"/>
    <testcase name="doesn&apos;t expose the signaling channel" time="0.001" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Group it&apos;s object structure"/>
    <testcase name="contains an array for connections" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Group it&apos;s object structure"/>
    <testcase name="errors because of lack of connection" time="0.005" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Group when not connected sendMessage() promise-style"/>
    <testcase name="errors because of lack of connection" time="0.005" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Group when not connected sendMessage() callback-style"/>
    <testcase name="errors because of lack of connection" time="0.005" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Group when not connected getMembers() promise-style"/>
    <testcase name="errors because of lack of connection" time="0.005" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Group when not connected getMembers() callback-style"/>
    <testcase name="errors because of lack of connection" time="0.005" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Group when not connected leave() promise-style"/>
    <testcase name="errors because of lack of connection" time="0.005" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Group when not connected leave() callback-style"/>
    <testcase name="is false" time="0" classname="Firefox 33.0.0 (Mac OS X 10.10).A respoke_Group when not connected isJoined()"/>
    <system-out><![CDATA[Firefox 33.0.0 (Mac OS X 10.10) LOG: 'This appears to be Firefox'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '543276C1-E697-4B87-94B0-69FF9CBCF8EF', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', 'CC10CD23-56B9-4808-8F76-EB835E3479EC', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '24765479-6BDE-4DBF-A5B7-835FB92DD9D0', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '45FBFAF5-D11B-42BA-A267-DFB4EFF913EA', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '7F9441AC-FB68-4E14-BC07-26EFD0F996A6', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '9E160F01-2336-453C-95C1-D66B450D1F28', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '3D631313-0AF9-491F-B380-30BB623C2586', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '18382917-B356-470B-B542-F63CB6022F92', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', 'B589FA27-DCF5-4CA4-9C68-AA1C8C9576F3', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'disconnect', function (){ ... }
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', 'F8A5A235-5785-45C4-8111-83B30EC909D1', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '49CA1FB4-128A-4B82-89CF-98BDE6CE510A', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '2F452E89-19E0-4772-8A1F-6C4DAA5CED26', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', 'E7421B7C-7D6E-4071-9EB4-F68A24EFD4D5', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '475156BA-7997-4860-B1C9-EB41438838D6', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '811A23D7-D082-49FC-94D1-3D9E7FE80D57', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '5D9D0890-74DB-4B87-8268-F76F114EB1EF', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '5F33B6FD-35D8-4118-9E54-7545447FE015', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', 'C6F828ED-2B86-4D6E-8995-3E02F179A2F5', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '06943A2A-1355-45F3-8228-61BE55E7AB42', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '05C17D8A-C098-42C7-9078-8FB4CB33B2AC', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '512AEB82-5A13-4ABF-9D70-52C85080B662', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '913A968F-3D80-4474-9ADC-F11E6AFF069D', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '28245C70-FFAD-4F66-96BE-1A9703C3788C', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', 'B27C5763-1E8A-484F-90DE-9E2C38BFD7B3', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '2AD759A9-AA29-4AC1-BA0F-9BE42478CDAA', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '6973D1D7-103D-4A18-AF50-71E8A2472446', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', 'D518BCD9-AB7A-4267-9813-BF3F843591ED', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '18600028-9109-4D94-A38A-619841C79B01', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '18A07E8E-F450-4386-98D6-95ACD5ADF9DD', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', 'B239F549-50E0-42BC-A46B-86BD25EAAB6C', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '7462C862-0316-458C-813B-3486222FBE4B', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '47C04FC9-CAB5-4C48-A9CE-F3A89BA9DDD8', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '867286EA-227C-4EB5-AE46-B28E3FF2A050', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', 'EF1D49D3-CF35-4AE4-BED5-4CB101A3F0C5', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '1C438C46-9EBF-4CF0-8D73-BDBED76C26B4', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '32F2C405-9EF2-470C-A63C-24F02F710340', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', 'B469CA14-BE5C-42BB-BF7F-F3E186321074', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '40BE4B5A-D5FE-4309-BF92-B86852A3760A', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) ERROR: 'Couldn't register for presence on', '25D41A22-628F-4483-82BB-F3CDD65B0A2B', 'Can't complete request when not connected. Please reconnect!'
,Firefox 33.0.0 (Mac OS X 10.10) WARN: 'Not adding duplicate listener to', 'order', function () { ... }

]]></system-out>
    <system-err/>
  </testsuite>
</testsuites>
